name: cd

on:
  push:
    branches: [main]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Create .env file for admin
        run: echo "VITE_ENDPOINT=${{ secrets.VITE_ENDPOINT }}" > admin/.env

      - name: Create .env file for web
        run: echo "VITE_SERVER_ENDPOINT=${{ secrets.VITE_ENDPOINT }}" > salinstudio-client/.env

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build docker image and push - client
        uses: docker/build-push-action@v6
        with:
          context: ./salinstudio-client
          push: true
          tags: fenroe/salinstudio-web:latest

      - name: Build docker image and push - admin
        uses: docker/build-push-action@v6
        with:
          context: ./admin
          push: true
          tags: fenroe/salinstudio-admin:latest

      - name: Build docker image and push - server
        uses: docker/build-push-action@v6
        with:
          context: ./salinstudio-server
          push: true
          tags: fenroe/salinstudio-server:latest

  deploy:
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file for compose
        run: |
          touch .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SIGNUP_SECRET=${{ secrets.SIGNUP_SECRET }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}" >> .env
          echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET}}" >> .env
          echo "AWS_CF_DOMAIN=${{ secrets.AWS_CF_DOMAIN }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "MODE=${{ secrets.MODE }}" >> .env

      - name: Move files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: docker-compose.yml,.env
          target: apps/salinstudio
      - name: SSH into server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd apps/salinstudio
            cat .env
            docker compose up -d
            rm -rf docker-compose.yml
            rm -rf .env
            docker image prune -a -f
